// mksyscall_windows.pl feisc_api.go
// MACHINE GENERATED BY THE COMMAND ABOVE; DO NOT EDIT

package feisc

import "unsafe"
import "syscall"

var (
	modfeisc = syscall.NewLazyDLL("feisc.dll")

	procFEISC_NewReader = modfeisc.NewProc("FEISC_NewReader")
	procFEISC_DeleteReader = modfeisc.NewProc("FEISC_DeleteReader")
	procFEISC_GetReaderList = modfeisc.NewProc("FEISC_GetReaderList")
	procFEISC_GetReaderPara = modfeisc.NewProc("FEISC_GetReaderPara")
	procFEISC_SetReaderPara = modfeisc.NewProc("FEISC_SetReaderPara")
	procFEISC_GetDLLVersion = modfeisc.NewProc("FEISC_GetDLLVersion")
	procFEISC_GetErrorText = modfeisc.NewProc("FEISC_GetErrorText")
	procFEISC_GetStatusText = modfeisc.NewProc("FEISC_GetStatusText")
	procFEISC_0x63_CPUReset = modfeisc.NewProc("FEISC_0x63_CPUReset")
	procFEISC_0x65_SoftVersion = modfeisc.NewProc("FEISC_0x65_SoftVersion")
	procFEISC_0x69_RFReset = modfeisc.NewProc("FEISC_0x69_RFReset")
	procFEISC_0x6A_RFOnOff = modfeisc.NewProc("FEISC_0x6A_RFOnOff")
	procFEISC_0x80_ReadConfBlock = modfeisc.NewProc("FEISC_0x80_ReadConfBlock")
	procFEISC_0x81_WriteConfBlock = modfeisc.NewProc("FEISC_0x81_WriteConfBlock")
	procFEISC_0x82_SaveConfBlock = modfeisc.NewProc("FEISC_0x82_SaveConfBlock")
	procFEISC_0x83_ResetConfBlock = modfeisc.NewProc("FEISC_0x83_ResetConfBlock")
	procFEISC_0xB0_ISOCmd = modfeisc.NewProc("FEISC_0xB0_ISOCmd")

)

func FEISC_NewReader(iPortHnd uint32) (result uint32, err error) {
	r0, _, e1 := syscall.Syscall(procFEISC_NewReader.Addr(), 1, uintptr(iPortHnd), 0, 0)
	result = uint32(r0)
	if result <0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func FEISC_DeleteReader(iReaderHnd uint32) (result uint32, err error) {
	r0, _, e1 := syscall.Syscall(procFEISC_DeleteReader.Addr(), 1, uintptr(iReaderHnd), 0, 0)
	result = uint32(r0)
	if result <0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func FEISC_GetReaderList(iNext uint32) (result uint32, err error) {
	r0, _, e1 := syscall.Syscall(procFEISC_GetReaderList.Addr(), 1, uintptr(iNext), 0, 0)
	result = uint32(r0)
	if result <0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func FEISC_GetReaderPara(iReaderHnd uint32, cPara *byte, cValue *byte) (result uint32, err error) {
	r0, _, e1 := syscall.Syscall(procFEISC_GetReaderPara.Addr(), 3, uintptr(iReaderHnd), uintptr(unsafe.Pointer(cPara)), uintptr(unsafe.Pointer(cValue)))
	result = uint32(r0)
	if result <0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func FEISC_SetReaderPara(iReaderHnd uint32, cPara *byte, cValue *byte) (result uint32, err error) {
	r0, _, e1 := syscall.Syscall(procFEISC_SetReaderPara.Addr(), 3, uintptr(iReaderHnd), uintptr(unsafe.Pointer(cPara)), uintptr(unsafe.Pointer(cValue)))
	result = uint32(r0)
	if result <0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func FEISC_GetDLLVersion(cVersion *byte) (err error) {
	r1, _, e1 := syscall.Syscall(procFEISC_GetDLLVersion.Addr(), 1, uintptr(unsafe.Pointer(cVersion)), 0, 0)
	if r1 == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func FEISC_GetErrorText(iErrorCode uint32, cErrorText *byte) (result uint32, err error) {
	r0, _, e1 := syscall.Syscall(procFEISC_GetErrorText.Addr(), 2, uintptr(iErrorCode), uintptr(unsafe.Pointer(cErrorText)), 0)
	result = uint32(r0)
	if result <0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func FEISC_GetStatusText(ucStatus byte, cStatusText *byte) (result uint32, err error) {
	r0, _, e1 := syscall.Syscall(procFEISC_GetStatusText.Addr(), 2, uintptr(ucStatus), uintptr(unsafe.Pointer(cStatusText)), 0)
	result = uint32(r0)
	if result <0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func FEISC_0x63_CPUReset(iReaderHnd uint32, cBusAdr byte) (result uint32, err error) {
	r0, _, e1 := syscall.Syscall(procFEISC_0x63_CPUReset.Addr(), 2, uintptr(iReaderHnd), uintptr(cBusAdr), 0)
	result = uint32(r0)
	if result <0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func FEISC_0x65_SoftVersion(iReaderHnd uint32, cBusAdr byte, cVersion *byte, iDataFormat uint32) (result uint32, err error) {
	r0, _, e1 := syscall.Syscall6(procFEISC_0x65_SoftVersion.Addr(), 4, uintptr(iReaderHnd), uintptr(cBusAdr), uintptr(unsafe.Pointer(cVersion)), uintptr(iDataFormat), 0, 0)
	result = uint32(r0)
	if result <0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func FEISC_0x69_RFReset(iReaderHnd uint32, cBusAdr byte) (result uint32, err error) {
	r0, _, e1 := syscall.Syscall(procFEISC_0x69_RFReset.Addr(), 2, uintptr(iReaderHnd), uintptr(cBusAdr), 0)
	result = uint32(r0)
	if result <0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func FEISC_0x6A_RFOnOff(iReaderHnd uint32, cBusAdr byte, cRF byte) (result uint32, err error) {
	r0, _, e1 := syscall.Syscall(procFEISC_0x6A_RFOnOff.Addr(), 3, uintptr(iReaderHnd), uintptr(cBusAdr), uintptr(cRF))
	result = uint32(r0)
	if result <0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func FEISC_0x80_ReadConfBlock(iReaderHnd uint32, cBusAdr byte, cConfAdr byte, cConfBlock *byte, iDataFormat uint32) (result uint32, err error) {
	r0, _, e1 := syscall.Syscall6(procFEISC_0x80_ReadConfBlock.Addr(), 5, uintptr(iReaderHnd), uintptr(cBusAdr), uintptr(cConfAdr), uintptr(unsafe.Pointer(cConfBlock)), uintptr(iDataFormat), 0)
	result = uint32(r0)
	if result <0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func FEISC_0x81_WriteConfBlock(iReaderHnd uint32, cBusAdr byte, cConfAdr byte, cConfBlock *byte, iDataFormat uint32) (result uint32, err error) {
	r0, _, e1 := syscall.Syscall6(procFEISC_0x81_WriteConfBlock.Addr(), 5, uintptr(iReaderHnd), uintptr(cBusAdr), uintptr(cConfAdr), uintptr(unsafe.Pointer(cConfBlock)), uintptr(iDataFormat), 0)
	result = uint32(r0)
	if result <0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func FEISC_0x82_SaveConfBlock(iReaderHnd uint32, cBusAdr byte, cConfAdr byte) (result uint32, err error) {
	r0, _, e1 := syscall.Syscall(procFEISC_0x82_SaveConfBlock.Addr(), 3, uintptr(iReaderHnd), uintptr(cBusAdr), uintptr(cConfAdr))
	result = uint32(r0)
	if result <0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func FEISC_0x83_ResetConfBlock(iReaderHnd uint32, cBusAdr byte, cConfAdr byte) (result uint32, err error) {
	r0, _, e1 := syscall.Syscall(procFEISC_0x83_ResetConfBlock.Addr(), 3, uintptr(iReaderHnd), uintptr(cBusAdr), uintptr(cConfAdr))
	result = uint32(r0)
	if result <0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func FEISC_0xB0_ISOCmd(iReaderHnd uint32, cBusAdr byte, cReqData *byte, iReqLen uint32, cRspData *byte, iRspLen *uint32, iDataFormat uint32) (result uint32, err error) {
	r0, _, e1 := syscall.Syscall9(procFEISC_0xB0_ISOCmd.Addr(), 7, uintptr(iReaderHnd), uintptr(cBusAdr), uintptr(unsafe.Pointer(cReqData)), uintptr(iReqLen), uintptr(unsafe.Pointer(cRspData)), uintptr(unsafe.Pointer(iRspLen)), uintptr(iDataFormat), 0, 0)
	result = uint32(r0)
	if result <0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}


